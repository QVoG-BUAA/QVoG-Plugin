FilePath:E:\File\CGQL\java2graph\input\Joern_check.java
FileName:Joern_check.java
package:null
import:java.io.BufferedReader
import:java.io.IOException
import:java.io.InputStreamReader
import:java.io.File
import:java.text.SimpleDateFormat
import:java.util.Date
{
}
class:Joern_check
method:scan String:filepath 10:39
{
v: int status = scanpro.waitFor(); 17
v: Enter Enter 10.39
v: status != 0 18
v: System.out.println(\"Scan Finished!\"); 25
v: System.out.println(scancmd); 14
v: Runtime scanrun = Runtime.getRuntime(); 15
v: String filepath 10
v: return true; 26
v: String scancmd = \".\joern-cli\joern-parse \" + filepath; 13
v: return false; 21
v: System.out.println(\"Failed to call shell's command\"); 20
v: Process scanpro = scanrun.exec(new String[][]j2cpg.pe.ExpressionInfo@51f); 16
estart: String filepath
eend: String scancmd = \".\joern-cli\joern-parse \" + filepath; 10!13
estart: String scancmd = \".\joern-cli\joern-parse \" + filepath;
eend: System.out.println(scancmd); 13!14
estart: String scancmd = \".\joern-cli\joern-parse \" + filepath;
eend: Process scanpro = scanrun.exec(new String[][]j2cpg.pe.ExpressionInfo@51f); 13!16
estart: Runtime scanrun = Runtime.getRuntime();
eend: Process scanpro = scanrun.exec(new String[][]j2cpg.pe.ExpressionInfo@51f); 15!16
estart: Process scanpro = scanrun.exec(new String[][]j2cpg.pe.ExpressionInfo@51f);
eend: int status = scanpro.waitFor(); 16!17
estart: int status = scanpro.waitFor();
eend: status != 0 17!18
estart: status != 0
eend: System.out.println(\"Failed to call shell's command\"); 18!20
estart: status != 0
eend: return false; 18!21
estart: status != 0
eend: System.out.println(\"Scan Finished!\"); 18!25
estart: status != 0
eend: return true; 18!26
estart: Enter Enter
eend: String filepath 10!10
estart: Enter Enter
eend: String scancmd = \".\joern-cli\joern-parse \" + filepath; 10!13
estart: Enter Enter
eend: System.out.println(scancmd); 10!14
estart: Enter Enter
eend: Runtime scanrun = Runtime.getRuntime(); 10!15
estart: Enter Enter
eend: Process scanpro = scanrun.exec(new String[][]j2cpg.pe.ExpressionInfo@51f); 10!16
estart: Enter Enter
eend: int status = scanpro.waitFor(); 10!17
estart: Enter Enter
eend: status != 0 10!18
}
class:Joern_check
method:clean 41:53
{
v: Process delpro = delrun.exec(new String[][]j2cpg.pe.ExpressionInfo@570); 46
v: Enter Enter 41.53
v: Runtime delrun = Runtime.getRuntime(); 45
v: int delsta = delpro.waitFor(); 47
v: String delcmd = \"rd /s /q result\"; 44
estart: String delcmd = \"rd /s /q result\";
eend: Process delpro = delrun.exec(new String[][]j2cpg.pe.ExpressionInfo@570); 44!46
estart: Runtime delrun = Runtime.getRuntime();
eend: Process delpro = delrun.exec(new String[][]j2cpg.pe.ExpressionInfo@570); 45!46
estart: Process delpro = delrun.exec(new String[][]j2cpg.pe.ExpressionInfo@570);
eend: int delsta = delpro.waitFor(); 46!47
estart: Enter Enter
eend: String delcmd = \"rd /s /q result\"; 41!44
estart: Enter Enter
eend: Runtime delrun = Runtime.getRuntime(); 41!45
estart: Enter Enter
eend: Process delpro = delrun.exec(new String[][]j2cpg.pe.ExpressionInfo@570); 41!46
estart: Enter Enter
eend: int delsta = delpro.waitFor(); 41!47
}
class:Joern_check
method:export 55:81
{
v: Process outpro = outrun.exec(new String[][]j2cpg.pe.ExpressionInfo@59c); 60
v: status != 0 62
v: return false; 65
v: Runtime outrun = Runtime.getRuntime(); 59
v: Enter Enter 55.81
v: String outcmd = \".\joern-cli\joern-export --repr=all --format=neo4jcsv --out ./result\"; 58
v: System.out.println(\"Failed to call shell's command\"); 64
v: int status = outpro.waitFor(); 61
v: return true; 68
estart: String outcmd = \".\joern-cli\joern-export --repr=all --format=neo4jcsv --out ./result\";
eend: Process outpro = outrun.exec(new String[][]j2cpg.pe.ExpressionInfo@59c); 58!60
estart: Runtime outrun = Runtime.getRuntime();
eend: Process outpro = outrun.exec(new String[][]j2cpg.pe.ExpressionInfo@59c); 59!60
estart: Process outpro = outrun.exec(new String[][]j2cpg.pe.ExpressionInfo@59c);
eend: int status = outpro.waitFor(); 60!61
estart: int status = outpro.waitFor();
eend: status != 0 61!62
estart: status != 0
eend: System.out.println(\"Failed to call shell's command\"); 62!64
estart: status != 0
eend: return false; 62!65
estart: status != 0
eend: return true; 62!68
estart: Enter Enter
eend: String outcmd = \".\joern-cli\joern-export --repr=all --format=neo4jcsv --out ./result\"; 55!58
estart: Enter Enter
eend: Runtime outrun = Runtime.getRuntime(); 55!59
estart: Enter Enter
eend: Process outpro = outrun.exec(new String[][]j2cpg.pe.ExpressionInfo@59c); 55!60
estart: Enter Enter
eend: int status = outpro.waitFor(); 55!61
estart: Enter Enter
eend: status != 0 55!62
}
class:Joern_check
method:main String[]:args 83:110
{
v: String filepath = reader.readLine(); 88
v: System.out.println(\"ë`?ö®ž©??Öœ?Àò?»ô?Èä?:\"); 87
v: clean(); 91
v: BufferedReader reader = null; 84
v: System.out.println(\"Scan Error!\"); 103
v: reader = new BufferedReader(new InputStreamReader(System.in)); 86
v: System.out.println(\"Success\"); 94
v: export() 92
v: scan(filepath) 89
v: Enter Enter 83.110
v: String[] args 83
v: System.out.println(\"Export Error!\"); 98
estart: reader = new BufferedReader(new InputStreamReader(System.in));
eend: String filepath = reader.readLine(); 86!88
estart: String filepath = reader.readLine();
eend: scan(filepath) 88!89
estart: scan(filepath)
eend: clean(); 89!91
estart: scan(filepath)
eend: export() 89!92
estart: scan(filepath)
eend: System.out.println(\"Scan Error!\"); 89!103
estart: export()
eend: System.out.println(\"Success\"); 92!94
estart: export()
eend: System.out.println(\"Export Error!\"); 92!98
estart: Enter Enter
eend: String[] args 83!83
estart: Enter Enter
eend: BufferedReader reader = null; 83!84
estart: Enter Enter
eend: reader = new BufferedReader(new InputStreamReader(System.in)); 83!86
estart: Enter Enter
eend: System.out.println(\"ë`?ö®ž©??Öœ?Àò?»ô?Èä?:\"); 83!87
estart: Enter Enter
eend: String filepath = reader.readLine(); 83!88
estart: Enter Enter
eend: scan(filepath) 83!89
}
class:Joern_check
method:check 112:141
{
v: return false; 127
v: String filepath = \"target.c\"; 115
v: export() 119
v: scan(filepath) 116
v: return false; 133
v: System.out.println(\"Export Error!\"); 126
v: System.out.println(\"Success\"); 121
v: Enter Enter 112.141
v: System.out.println(\"Scan Error!\"); 132
v: clean(); 118
v: return true; 122
estart: String filepath = \"target.c\";
eend: scan(filepath) 115!116
estart: scan(filepath)
eend: clean(); 116!118
estart: scan(filepath)
eend: export() 116!119
estart: scan(filepath)
eend: System.out.println(\"Scan Error!\"); 116!132
estart: scan(filepath)
eend: return false; 116!133
estart: export()
eend: System.out.println(\"Success\"); 119!121
estart: export()
eend: return true; 119!122
estart: export()
eend: System.out.println(\"Export Error!\"); 119!126
estart: export()
eend: return false; 119!127
estart: Enter Enter
eend: String filepath = \"target.c\"; 112!115
estart: Enter Enter
eend: scan(filepath) 112!116
}
